# 
#    Copyright (c) 2011 3 Round Stones Inc., Some rights reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<> a <RdfSchemaGraph>;
    foaf:primaryTopic <File>.

<File> a <Creatable>, owl:Class;
    rdfs:label "File";
    rdfs:comment "Upload a file with a known file type and extension.";
    rdfs:subClassOf <Viewable>, <Editable>, foaf:Document;
    owl:equivalentClass </callimachus/File>, </callimachus/1.0/types/File>, </callimachus/1.3/types/File>;
    rdfs:isDefinedBy <../../ontology>;
    calli:administrator </auth/groups/super>;
    calli:author </auth/groups/users>,</auth/groups/staff>,</auth/groups/power>,</auth/groups/admin>;
    calli:create <../templates/file-create.xhtml>;
    calli:view <../templates/file-view.xhtml>;
    calli:edit <../templates/file-edit.xhtml>.

:DeleteFileIfNotUsed rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <File>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
    calli:method "DELETE";
    calli:requires calli:editor;
    calli:type "message/x-response";
    calli:script """
        return this.DeleteIfNotUsed();
    """.

:GetMetadata rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <File>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:org.openrdf.query.GraphQueryResult>];
    calli:method "GET";
    calli:requires calli:reader;
    calli:type "text/turtle;q=0.6", "application/ld+json;q=0.4", "application/rdf+xml;q=0.2";
    calli:header "Link:<http://www.w3.org/ns/ldp#Resource>;rel=\"type\"";
    calli:script "return this.GetRdfDescription(prefer, 'describe')".

:prefer a owl:FunctionalProperty, owl:DatatypeProperty;
    rdfs:domain :GetMetadata;
    rdfs:range xsd:string;
    calli:header "Prefer";
    calli:type "text/plain".

:PutMetadata rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <File>];
    rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
    calli:method "PUT";
    calli:requires calli:administrator;
    calli:expect "204-no-content";
    calli:type "text/uri-list";
    calli:script "return this.PutDescribe(ifMatch, metaData);".

:ifMatch a owl:FunctionalProperty, owl:DatatypeProperty;
    rdfs:domain :PutMetadata;
    rdfs:range xsd:string;
    calli:header "If-Match";
    calli:type "text/plain".

:metaData a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :PutMetadata;
    rdfs:range <java:org.openrdf.query.GraphQueryResult>;
    calli:type "text/turtle;q=0.6", "application/ld+json;q=0.4", "application/rdf+xml;q=0.2".

