# 
#    Portions Copyright (c) 2011 Talis Inc, Some Rights Reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix dc:<http://purl.org/dc/elements/1.1/>.
@prefix dcterms:<http://purl.org/dc/terms/>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

:GetCreatePage rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom calli:Creatable];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:javax.xml.stream.XMLEventReader>];
	msg:method "GET";
	msg:query "create";
	msg:type "application/xhtml+xml";
	msg:transform </callimachus/styles/TransformXhtml>;
	msg:script <operations.js#getCreatePage>.

:GetCreatorPage rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom calli:Composite];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:javax.xml.stream.XMLEventReader>];
	msg:method "GET";
	msg:query "create";
	msg:realm </callimachus/manifest>;
	msg:type "application/xhtml+xml";
	msg:transform </callimachus/styles/TransformXhtml>;
	msg:script <operations.js#getCreatorPage>.

:PostFactoryCreate rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom calli:Composite];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom </callimachus/Local>];
	msg:method "POST";
	msg:query "create";
	msg:realm </callimachus/manifest>;
	msg:expect "201-created";
	msg:type "text/plain";
	msg:script <operations.js#postFactoryCreate>.

# override this method for subclass create methods
:PostCreate rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom calli:Creatable];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom </callimachus/Local>];
	msg:script <operations.js#postCreate>.

:body a owl:ObjectProperty, owl:FunctionalProperty;
	rdfs:domain [owl:unionOf (:PostFile :PostCreate :PostFactoryCreate)];
	rdfs:range <java:java.io.InputStream>;
	msg:type "*/*".

:create a owl:FunctionalProperty, owl:ObjectProperty;
	rdfs:domain [owl:unionOf (:GetCreatorPage :PostFactoryCreate)];
	rdfs:range calli:Creatable;
	msg:query "create".

:intermediate a owl:FunctionalProperty, owl:DatatypeProperty;
	rdfs:domain :PostFactoryCreate;
	rdfs:range xsd:boolean;
	msg:query "intermediate".

:location a owl:FunctionalProperty, owl:ObjectProperty;
	rdfs:domain [owl:unionOf (:PostFile :PostCreate :PostFactoryCreate)];
	msg:query "location".

:type a owl:FunctionalProperty, owl:ObjectProperty;
	rdfs:domain [owl:unionOf (:PostFile :PostCreate :PostFactoryCreate)];
	rdfs:range xsd:string;
	msg:header "Content-Type".

# find the user that created $thing if they are not otherwise editors
:FindContributor rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom calli:Composite];
	msg:sparql  """
		SELECT DISTINCT ?contributor
		WHERE {
			{
				audit:current-trx audit:contributor ?contributor
			} UNION {
				GRAPH ?graph { $thing a ?type }
				?graph audit:contributor ?contributor
			} OPTIONAL {
				{
					$this ?editor ?contributor
				} UNION {
					$this ?editor [calli:member ?contributor]
				}
				FILTER (?editor = calli:editor || ?editor = calli:administrator)
			}
			FILTER (!bound(?editor))
		}
	""".

:thing a owl:ObjectProperty, owl:FunctionalProperty;
	rdfs:domain :FindContributor.

