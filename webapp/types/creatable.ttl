# 
#    Portions Copyright (c) 2011 Talis Inc, Some Rights Reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix dc:<http://purl.org/dc/elements/1.1/>.
@prefix dcterms:<http://purl.org/dc/terms/>.
@prefix prov:<http://www.w3.org/ns/prov#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<> a <RdfSchemaGraph>;
    foaf:primaryTopic <Creatable>.

<Creatable> a owl:Class;
    rdfs:label "Creatable";
    rdfs:subClassOf <Serviceable>;
    owl:equivalentClass </callimachus/Creatable>, </callimachus/1.0/types/Creatable>, </callimachus/1.3/types/Creatable>;
    rdfs:isDefinedBy <../../ontology>.

:GetCreatePage rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Creatable>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.Reader>];
    calli:rel "create-form";
    calli:method "GET";
    calli:query "create";
    calli:requires calli:author;
    calli:type "text/html";
    calli:imports <java:org.callimachusproject.server.exceptions.InternalServerError>;
    calli:script """
        if (!this.calliCreate || this.calliCreate.isEmpty())
            throw new InternalServerError("No create template");
        if (this.calliCreate.size() != 1)
            throw new InternalServerError("Multiple create templates");
        var page = this.calliCreate.iterator().next();
        var stream = page.openInputStream();
        if (!stream)
            throw new InternalServerError(page + " does not exist");
        try {
            return this.TransformCreatePage(page, stream, targetOfCreate);
        } finally {
            stream.close();
        }
    """.

:targetOfCreate a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :GetCreatePage.

:TransformCreatePage rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Creatable>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.Reader>];
    calli:post "../pipelines/creatable-html.xpl?results&target={targetOfHtml}\nContent-Location: {+createPage}\nContent-Type: application/xhtml+xml".

:createPage a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :TransformCreatePage.

:createPageStream a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :TransformCreatePage;
    rdfs:range <java:java.io.InputStream>;
    calli:type "application/xhtml+xml".

:targetOfHtml a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :TransformCreatePage.
