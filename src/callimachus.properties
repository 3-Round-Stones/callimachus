#
# Copyright (c) 2010 Zepheira LLC, Some Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
handlers=java.util.logging.FileHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level=INFO

# The default level for this Handler
java.util.logging.FileHandler.level=ALL

# Track client requests.
# Consumes resources, but helpful for detecting orphaned responses
org.openrdf.http.object.client.FutureRequest.level=ALL

# The name of a Formatter class to use
java.util.logging.FileHandler.formatter=org.callimachusproject.logging.LogMessageFormatter

# The following special tokens can be used in the pattern property
# which specifies the location and name of the log file.
#   / - standard path separator
#   %t - system temporary directory
#   %h - value of the user.home system property
#   %g - generation number for rotating logs
#   %u - unique number to avoid conflicts
java.util.logging.FileHandler.pattern=%h/log/callimachus.log

# Whether the FileHandler should append onto any existing files
java.util.logging.FileHandler.append=true

# An approximate maximum amount to write (in bytes) to any one file
java.util.logging.FileHandler.limit=50000

# How many output files to cycle through
java.util.logging.FileHandler.count=10
