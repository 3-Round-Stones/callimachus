@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix obj:<http://www.openrdf.org/rdf/2009/object#>.
@prefix http:<http://www.openrdf.org/rdf/2009/httpobject#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix accounts:</accounts/>.
@prefix :<#>.

################################
# Realm
################################

<Accounts> rdfs:subClassOf calli:DigestRealm, calli:Viewable, calli:Editable, calli:Copyable;
	calli:view <accounts.xhtml>;
	calli:edit <accounts-edit.xhtml>;
	calli:copy <group-create.xhtml>;
	calli:withNamespace </group/>.

</accounts> a <Accounts>;
	calli:origin </>;
	calli:authName </>;
	calli:domain </>;
	calli:unauthorized <unauthorized.xhtml>;
	calli:forbidden <forbidden.xhtml>;
	calli:authenticates </group/admin>;
	calli:maintainer </group/admin>.

</group/admin> a <Group>;
	rdfs:label "admin";
	calli:curator </group/admin>; # maintainer of invited users
	calli:maintainer </group/admin>.

################################
# User
################################

<User> rdfs:subClassOf calli:User, calli:MailSubmitter;
	rdfs:subClassOf calli:Viewable, calli:Editable;
	http:realm </accounts>; # User operations must be authorized
	calli:icon <user-favicon.png>;
	calli:withNamespace </user/>;
	calli:view <user.xhtml>;
	calli:edit <user-edit.xhtml>.

################################
# Group
################################

<Group> rdfs:subClassOf calli:Group, calli:Viewable,calli:Editable, calli:Copyable;
	http:realm </accounts>; # Group operations must be authorized
	calli:icon <group-favicon.png>;
	calli:view <group.xhtml>;
	calli:edit <group-edit.xhtml>.

################################
# login
################################

:GetAuthorization rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target; owl:hasValue </accounts>].

:authorization a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :GetAuthorization;
	rdfs:range xsd:string;
	http:header "Authorization".

# Redirection to the authorized user
# Used to login
:GetLoginPage rdfs:subClassOf :GetAuthorization;
	rdfs:subClassOf [owl:onProperty obj:functionalLiteralResponse;
		owl:allValuesFrom xsd:string];
	http:method "GET";
	http:operation "login", "settings", "contributions";
	http:realm </accounts>;
	http:expect "302-found";
	http:cache-control "max-age:3600";
	obj:script """
		if ("settings" == query)
			return this.findCredential(authorization) + "?edit";
		if ("contributions" == query)
			return this.findCredential(authorization) + "?contributions";
		return this.findCredential(authorization).toString();
	""".

:query a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :GetLoginPage;
	rdfs:range xsd:string;
	http:parameter "*".

################################
# logout
################################

# Prompts the browser to login using bogus credentials (to forget legitimate onces)
# Available to user when logged in
:GetLogout rdfs:subClassOf :GetAuthorization;
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom <java:org.apache.http.HttpResponse>];
	http:method "GET";
	http:operation "logout";
	http:type "message/x-response";
	obj:imports <java:org.apache.http.ProtocolVersion>;
	obj:imports <java:org.apache.http.message.BasicHttpResponse>;
	obj:script """
		var ver = new ProtocolVersion("HTTP", 1, 1);
		if (authorization && authorization.contains('username="logout"')) {
			//# bogus credentials received
			var resp = new BasicHttpResponse(ver, 303, "See Other");
			resp.setHeader("Location", "/");
			return resp;
		}
		//# the browser must send invalid credentials to logout
		var resp = new BasicHttpResponse(ver, 401, "Unauthorized");
		var hd = 'Digest realm="' + this.calliAuthName + '", domain="'
			+ this.protectionDomain() + '", nonce="logout", algorithm="MD5", qop="auth"';
		resp.setHeader('WWW-Authenticate', hd);
		return resp;
	""".

