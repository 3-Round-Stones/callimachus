# 
#    Copyright (c) 2011 Talis Inc., Some rights reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<> a <RdfSchemaGraph>;
    foaf:primaryTopic <Class>.

# Note instances of <Class> are creatable and <Class> itself is also creatable
<Class> a <Creatable>, owl:Class;
    rdfs:subClassOf <Creatable>, <Viewable>, <Editable>, owl:Class;
    rdfs:label "Class";
    rdfs:comment "A class is a construct that is used as a blueprint (or template) to create and edit resources of that class.";
    owl:equivalentClass </callimachus/Class>, </callimachus/1.0/types/Class>, </callimachus/1.3/types/Class>;
    rdfs:isDefinedBy <../../ontology>;
    calli:administrator </auth/groups/super>;
    calli:author </auth/groups/staff>,</auth/groups/power>,</auth/groups/admin>;
    calli:icon <../images/class.png>;
    calli:thumbnail <../images/class.svg>;
    calli:view <../templates/class-view.xhtml>;
    calli:edit <../templates/class-edit.xhtml>;
    calli:create <../templates/class-create.xhtml>.

:GetClassIndex rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Class> ];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.Reader> ];
    calli:method "GET";
    calli:query "index";
    calli:requires calli:reader;
    calli:type "text/html";
    calli:copy "../pipelines/class-index.xpl?results&target={0}".

# when a class is created
:CreateClass owl:intersectionOf (<creatable.ttl#PostCreate>
        [owl:onProperty msg:target; owl:hasValue <Class> ]);
    calli:imports <java:org.openrdf.model.vocabulary.RDF>;
    calli:imports <RdfSchemaGraph>;
    calli:script """
        var ret = proceed();
        var con = this.objectConnection;
        var of = con.objectFactory;
        con.addDesignation(of.createObject(con.getVersionBundle()), RdfSchemaGraph);
        con.recompileSchemaOnClose();
        return ret;
    """.

:PostClassEdit owl:intersectionOf (<editable.ttl#PostEdit>
        [owl:onProperty msg:target; owl:allValuesFrom <Class>]);
    calli:method "POST";
    calli:query "edit";
    calli:requires calli:editor;
    calli:expect "201-modified";
    calli:type "text/uri-list";
    calli:imports <java:org.openrdf.model.vocabulary.RDF>;
    calli:imports <RdfSchemaGraph>;
    calli:script """
        var ret = proceed();
        var con = this.objectConnection;
        var of = con.objectFactory;
        con.addDesignation(of.createObject(con.getVersionBundle()), RdfSchemaGraph);
        con.recompileSchemaOnClose();
        return ret;
    """.

