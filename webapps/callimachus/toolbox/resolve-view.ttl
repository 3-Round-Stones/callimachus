@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix :<#>.

<> a <../SchemaGraph>.

:ResolveView rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:hasValue <../view>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	calli:method "GET";
	calli:query "iri";
	calli:expect "302-found";
	calli:header "cache-control:no-store";
	msg:imports <java:org.openrdf.model.vocabulary.RDFS>;
	msg:imports <java:org.openrdf.model.vocabulary.RDF>;
	msg:imports <java:java.net.URLEncoder>;
	msg:imports </diverted>;
	msg:imports calli:Viewable;
	msg:script """
		var con = this.objectConnection;
		var vf = con.valueFactory;

		function canonicalize(uri) {
			uri = uri.normalize();
			var sch = uri.scheme.toLowerCase();
			var frag = uri.fragment;
			if (uri.isOpaque()) {
				return new java.net.URI(sch, uri.schemeSpecificPart, frag);
			} else {
				var auth = uri.authority.toLowerCase();
				return new java.net.URI(sch, auth, uri.path, uri.query, frag);
			}
		}

		function parseAbsoluteURI(string) {
			try {
				if (string.indexOf(":") > 0) {
					var uri = java.net.URI.create(string);
					if (uri.isAbsolute())
						return canonicalize(uri);
				} else if (string.indexOf("/") == 0) {
					var origin = java.net.URI.create(this.toString());
					var sch = origin.scheme;
					var auth = origin.authority;
					var uri = java.net.URI.create(string);
					var frag = uri.fragment;
					uri = new java.net.URI(sch, auth, uri.path, uri.query, frag);
					return canonicalize(uri);
				}
			} catch (e) {
				return null;
			}
		}

		function redirectURL(uri) {
			var origin = uri.authority ? new java.net.URI(uri.scheme, uri.authority, "/", null, null).toASCIIString() : null;
			var iri = uri.toASCIIString();
			var viewable = con.getObject(iri) instanceof Viewable;
			var Origin = vf.createURI("http://callimachusproject.org/rdf/2009/framework#Origin");
			var authority = origin && con.hasStatement(vf.createURI(origin), RDF.TYPE, Origin, []);
			if (viewable && authority && (uri.query || uri.fragment)) { //# complex resource URI
				return origin + "diverted;" + URLEncoder.encode(iri) + '?view';
			} else if (viewable && authority) { //# Self resolving URL
				return iri + '?view';
			} else if (viewable) { //# Foreign IRI, but can be presented here
				return diverted.toString() + ";" + URLEncoder.encode(iri) + '?view';
			} else { //# Unknown resource
				return iri;
			}
		}

		if (iri) {
			var uri = parseAbsoluteURI(iri);
			if (uri) //# absolute URI redirect
				return redirectURL(uri);
		}
		return null; //# 404
	""".

:iri a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :ResolveView;
	rdfs:range xsd:string;
	calli:query "iri".

