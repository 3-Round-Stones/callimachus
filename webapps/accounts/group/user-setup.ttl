@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix obj:<http://www.openrdf.org/rdf/2009/object#>.
@prefix http:<http://www.openrdf.org/rdf/2009/httpobject#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<local> a calli:LocalRealm;
	calli:origin </>;
	calli:domain <../../group/>.

:HasNoMaintainer rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:allValuesFrom <Group>];
	rdfs:subClassOf [owl:onProperty obj:functionalLiteralResponse;
		owl:allValuesFrom xsd:boolean];
	rdfs:subClassOf [owl:onProperty obj:functionalLiteralResponse;
		owl:cardinality 1];
	obj:sparql """
		ASK {
			# this group is maintained by its members
			$this calli:maintainer $this

			# there are no members to maintain this
			OPTIONAL { $this calli:member ?member } FILTER (!bound(?member))

			# there is no user assigned to maintain this
			OPTIONAL { $this calli:maintainer [calli:name ?user] } FILTER (!bound(?user))

			# there is no member of another group that can maintain this
			OPTIONAL { $this calli:maintainer [calli:member ?adimn] } FILTER (!bound(?admin))
		}
	""".

:GetUserSetup rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:allValuesFrom <Group>];
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom <java:java.io.InputStream>];
	http:method "GET";
	http:operation "usersetup";
	http:type "application/xhtml+xml";
	http:transform </callimachus/layout.ttl#TransformXhtml>;
	http:realm <local>;
	obj:imports <user-setup.xhtml>;
	obj:imports <java:org.openrdf.http.object.exceptions.BadRequest>;
	obj:script """
		if (!this.HasNoMaintainer())
			throw new BadRequest("This service has already been setup");
		return user_setup_xhtml.calliConstruct(this, 'copy');
	""".

:PostUserSetup rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:allValuesFrom <Group>];
	rdfs:subClassOf [owl:onProperty obj:functionalLiteralResponse;
		owl:allValuesFrom xsd:string];
	http:method "POST";
	http:operation "usersetup";
	http:realm <local>;
	http:expect "201-created";
	obj:imports <user-setup.xhtml>;
	obj:imports <../../user/>;
	obj:imports </accounts>;
	obj:imports <java:org.openrdf.http.object.exceptions.BadRequest>;
	obj:imports <java:java.util.Collections>;
	obj:imports <java:org.openrdf.rio.rdfxml.RDFXMLParser>;
	obj:imports <java:org.openrdf.rio.helpers.StatementCollector>;
	obj:imports <java:org.openrdf.model.impl.LinkedHashModel>;
	obj:imports <java:org.openrdf.model.impl.URIImpl>;
	obj:imports <java:java.io.ByteArrayInputStream>;
	obj:script """
		if (!this.HasNoMaintainer())
			throw new BadRequest("This service has already been setup");
		var byteArray = bytes.toByteArray();
		var stream = new ByteArrayInputStream(byteArray);
		var copy = user_setup_xhtml.calliCopyResource(this, stream, Collections.singleton(user));
		calliMembers.add(copy);
		//# copy is empty if no transaction support (HTTPRepository)
		var model = new LinkedHashModel();
		var parser = new RDFXMLParser();
		parser.setRDFHandler(new StatementCollector(model));
		parser.parse(new ByteArrayInputStream(byteArray), this.toString());
		var ns = "http://callimachusproject.org/rdf/2009/framework#";
		var algorithm = model.filter(null, new URIImpl(ns + "algorithm"), null, []).objectLiteral().label;
		var encoded = model.filter(null, new URIImpl(ns + "encoded"), null, []).objectLiteral().label;
		if (algorithm != "MD5")
			throw new BadRequest("Unsupported algorithm");
		if (encoded.length < 32)
			throw new BadRequest("Invalid MD5 sum");
		return accounts + "?welcome";
	""".

:bytes a owl:ObjectProperty, owl:FunctionalProperty;
	rdfs:domain :PostUserSetup;
	rdfs:range <java:java.io.ByteArrayOutputStream>;
	http:type "application/rdf+xml".

