# 
#    Copyright (c) 2011 3 Round Stones Inc, Some Rights Reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<> a <RdfSchemaGraph>;
    foaf:primaryTopic <Script>.

<Script> a <Creatable>, owl:Class;
    rdfs:subClassOf <File>;
    rdfs:label "JavaScript file";
    rdfs:comment "A JavaScript file.";
    owl:equivalentClass </callimachus/Script>, </callimachus/1.0/types/Script>, </callimachus/1.3/types/Script>;
    rdfs:isDefinedBy <../../ontology>;
    calli:administrator </auth/groups/super>;
    calli:author </auth/groups/staff>,</auth/groups/power>,</auth/groups/admin>;
    calli:icon <../images/script.png>;
    calli:thumbnail <../images/script.svg>;
    calli:view <../templates/text-view.xhtml>;
    calli:edit <../templates/script-edit.xhtml>;
    calli:create <../templates/script-create.xhtml>;
    calli:mediaType "text/javascript".

# GET /script.js
:GetJavaScript rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Script>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.Reader>];
    calli:method "GET";
    calli:rel "edit-media";
    calli:requires calli:reader;
    calli:type "text/javascript";
    calli:header "cache-control:no-cache";
    calli:header "cache-control:cache-range";
    calli:header "Link:<http://www.w3.org/ns/ldp#Resource>;rel=\"type\"";
    calli:script "return this.openReader(true)".

# PUT /script.js
:UploadBinaryScript rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Script>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom owl:Nothing];
    calli:method "PUT";
    calli:requires calli:editor;
    calli:script "return this.ReplaceFileContent(stream, 'application/javascript', true);".

:stream a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :UploadBinaryScript;
    rdfs:range <java:java.io.InputStream>;
    calli:type "application/javascript".

# PUT /script.js
:UploadScript rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Script>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom owl:Nothing];
    calli:method "PUT";
    calli:requires calli:editor;
    calli:imports <java:org.apache.commons.io.input.ReaderInputStream>;
    calli:imports <java:java.nio.charset.Charset>;
    calli:script """
        var stream = new ReaderInputStream(reader, Charset.defaultCharset());
        return this.ReplaceFileContent(stream, 'text/javascript', true);
    """.

:reader a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :UploadScript;
    rdfs:range <java:java.io.Reader>;
    calli:type "text/javascript".

:ValidateScript owl:intersectionOf (<editable.ttl#Validate>
        [owl:onProperty msg:target; owl:allValuesFrom <Script>]);
    calli:imports <java:org.callimachusproject.server.exceptions.BadRequest>;
    calli:script """
        var saved = this.openReader(true);
        try {
            var compiler = new com.google.javascript.jscomp.Compiler();
            var options = new com.google.javascript.jscomp.CompilerOptions();
            var extern = com.google.javascript.jscomp.SourceFile.fromCode("nil","");
            var input = com.google.javascript.jscomp.SourceFile.fromReader(this.toString(), saved);
            options.setLanguageIn(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5);
            options.setLanguageOut(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5);
            options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.NON_STANDARD_JSDOC, com.google.javascript.jscomp.CheckLevel.OFF);
            options.setWarningLevel(com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE, com.google.javascript.jscomp.CheckLevel.OFF);
            compiler.compile(extern, input, options);
            var errors = compiler.getErrors();
            if (errors.length) {
                throw new BadRequest(errors[0].toString());
            }
        } finally {
            saved.close();
        }
        var con = this.objectConnection;
        var bundles = con.getStatements(null, null, this.resource, true, []);
        try {
            while (bundles.hasNext()) {
                var st = bundles.next();
                if (st.predicate.stringValue().indexOf("http://www.w3.org/1999/02/22-rdf-syntax-ns#_") == 0) {
                    con.getObject(st.subject).touchRevision();
                }
            }
        } finally {
            bundles.close();
        }
    """.

