# 
#    Copyright (c) 2011 3 Round Stones Inc, Some Rights Reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix dcterms:<http://purl.org/dc/terms/>.
@prefix skosxl:<http://www.w3.org/2008/05/skos-xl#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix prov:<http://www.w3.org/ns/prov#>.
@prefix :<#>.

<> a <RdfSchemaGraph>;
    foaf:primaryTopic <Origin>.

<Origin> a owl:Class;
    rdfs:subClassOf <Realm>, calli:Origin;
    rdfs:label "HTTP Origin";
    rdfs:comment "Root path of an http or https authority";
    owl:equivalentClass </callimachus/Origin>, </callimachus/1.0/types/Origin>, </callimachus/1.3/types/Origin>;
    rdfs:isDefinedBy <../../ontology>;
    calli:icon <../images/realm.png>;
    calli:thumbnail <../images/realm.svg>;
    calli:view <../templates/folder-view.xhtml>.

################################
# JavaScript base URI
################################

:GetBaseUri rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Origin>];
    rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
    rdfs:subClassOf [owl:onProperty :baseuri; owl:hasValue <../>];
    calli:method "GET";
    calli:query "baseuri";
    calli:requires calli:reader;
    calli:type "text/javascript";
    calli:script """
        return 'if(!window.calli)window.calli={};window.calli.baseURI="' + baseuri + '";\\n';
    """.

:baseuri a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :GetBaseUri;
    rdfs:range <Folder>.

################################
# List realms defined by <Realm>
################################

:GetListOfRealms rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Origin>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
    calli:method "GET";
    calli:query "realms";
    calli:rel calli:realms;
    calli:requires calli:subscriber;
    calli:type "application/atom+xml;q=0.9";
    calli:header "cache-control:no-cache";
    calli:copy "../pipelines/origin-realms-atom.xpl?results&target={0}".
