@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix obj:<http://www.openrdf.org/rdf/2009/object#>.
@prefix http:<http://www.openrdf.org/rdf/2009/httpobject#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<anybody> a calli:AnybodyRealm;
	calli:origin </>;
	calli:domain <../../user/>.

# Linked from request password email
:GetResetPassword rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:allValuesFrom <User>];
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom <java:java.io.InputStream>];
	http:method "GET";
	http:operation "resetpassword";
	http:type "application/xhtml+xml";
	http:transform </callimachus/layout.ttl#TransformXhtml>;
	http:cache-control "no-store";
	http:realm <anybody>;
	obj:imports <java:org.apache.commons.codec.digest.DigestUtils>;
	obj:imports <java:org.openrdf.http.object.exceptions.BadRequest>;
	obj:imports <reset-password.xhtml>;
	obj:script """
		return reset_password_xhtml.calliConstruct(this, 'view');
	""".

# Confirms token and resets their password
:PostResetPassword rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:allValuesFrom <User>];
	rdfs:subClassOf [owl:onProperty obj:objectResponse;
		owl:allValuesFrom owl:Nothing];
	http:method "POST";
	http:operation "resetpassword";
	http:cache-control "no-store";
	http:realm <anybody>;
	obj:imports </accounts>;
	obj:imports <mail-password.xhtml>;
	obj:imports <java:org.apache.commons.codec.digest.DigestUtils>;
	obj:imports <java:org.openrdf.http.object.exceptions.BadRequest>;
	obj:imports <java:java.io.CharArrayWriter>;
	obj:imports <java:java.util.Random>;
	obj:imports <java:java.lang.Integer>;
	obj:imports <java:java.lang.System>;
	obj:script """
		if (!form.get('nonce') || !form.get("token"))
			throw new BadRequest("Missing nonce and/or token");
		var ha1 = DigestUtils.md5Hex(this.calliEncoded);
		var nonce = form.get('nonce')[0];
		var ha2 = DigestUtils.md5Hex(this.toString());
		var token = DigestUtils.md5Hex(ha1 + ":" + nonce + ":" + ha2);
		if (token != form.get("token")[0])
			throw new BadRequest("Request is No Longer Valid");
		var password = this.generatePassword();
		var decoded = this.calliName + ":" + accounts.calliAuthName + ":" + password;
		calliAlgorithm = "MD5";
		calliEncoded = DigestUtils.md5(decoded.getBytes("UTF-8"));
		var body = mail_password_xhtml.calliConstructHTML(this);
		body = body.replaceAll("@@USERNAME@@", calliName);
		body = body.replaceAll("@@PASSWORD@@", password);
		this.sendMessage(body, this.calliEmail);
	""".

:form a owl:ObjectProperty, owl:FunctionalProperty;
	rdfs:domain :PostResetPassword;
	rdfs:range <java:java.util.Map>;
	http:type "application/x-www-form-urlencoded".

