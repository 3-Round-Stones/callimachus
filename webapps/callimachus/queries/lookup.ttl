@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix obj:<http://www.openrdf.org/rdf/2009/object#>.
@prefix http:<http://www.openrdf.org/rdf/2009/httpobject#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix :<#>.

:menu-lookup rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target;
		owl:hasValue <../lookup>];
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom obj:TupleResult];
	http:method "GET";
	http:type "application/sparql-results+xml";
	http:cache-control "no-store";
	http:transform :lookup-xsl;
	obj:sparql """
		SELECT DISTINCT ?label ?comment ?icon ?url ?modified
		WHERE {
			?url calli:soundex $soundex
			{
				?url rdfs:label ?label
				FILTER (regex(str(?label), $regex, "i"))
			} UNION {
				?url skos:prefLabel ?label
				FILTER (regex(str(?label), $regex, "i"))
			} UNION {
				?url skos:prefLabel ?label; skos:altLabel ?altLabel
				FILTER (regex(str(?altLabel), $regex, "i"))
			} UNION {
				?url skos:prefLabel ?label; skos:hiddenLabel ?hiddenLabel
				FILTER (regex(str(?hiddenLabel), $regex, "i"))
			}
			FILTER (isIRI(?url))
			OPTIONAL { ?url a [calli:icon ?icon] }
			OPTIONAL { ?url rdfs:comment ?comment }
			OPTIONAL { ?url audit:revision ?revision
				OPTIONAL { ?revision audit:committedOn ?modified }
			}
		}
		ORDER BY ?label ?url ?icon
		LIMIT 100
	""".

:menu-lookup-soundex a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :menu-lookup;
	rdfs:range xsd:string;
	http:parameter "q";
	http:transform calli:asSoundex;
	obj:name "soundex".

:menu-lookup-regex a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :menu-lookup;
	rdfs:range xsd:string;
	http:parameter "q";
	http:transform calli:regexStartsWith;
	obj:name "regex".

:lookup-xsl rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom <java:java.io.InputStream>];
	http:type "application/xml";
	http:transform <../layout.ttl#template-xsl>;
	obj:xslt <lookup.xsl>.

:lookup-xsl-input a owl:ObjectProperty; a owl:FunctionalProperty;
	rdfs:domain :lookup-xsl;
	rdfs:range <java:java.io.InputStream>.

