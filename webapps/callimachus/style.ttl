# 
#    Copyright (c) 2011 3 Round Stones Inc, Some Rights Reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<> a <SchemaGraph>.

<Style> a <Creatable>, owl:Class;
    rdfs:subClassOf <File>;
    rdfs:label "Style";
    rdfs:comment "Style files";
    rdfs:isDefinedBy </callimachus>;
    calli:author </group/staff>,</group/admin>;
    calli:icon <style.png>;
    calli:view <style-view.xhtml>;
    calli:edit <style-edit.xhtml>;
    calli:create <style-create.xhtml>;
    calli:type "text/css".

# GET /style.css
:GetStyleSheet rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Style>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.Reader>];
    calli:method "GET";
    calli:type "text/css";
    calli:header "cache-control:no-cache";
    calli:header "cache-control:cache-range";
    calli:script "return this.openReader(true)".

# POST ?create=/callimachus/Style
:CreateStyle owl:intersectionOf (<toolbox/create.ttl#PostCreate>
        [owl:onProperty msg:target; owl:hasValue <Style> ]);
    calli:imports <java:org.openrdf.model.vocabulary.RDFS>;
    calli:imports <java:java.net.URLDecoder>;
    calli:imports <java:org.callimachusproject.server.HTTPObjectServer>;
    calli:imports <java:org.callimachusproject.server.exceptions.BadRequest>;
    calli:imports <java:org.callimachusproject.server.exceptions.InternalServerError>;
    calli:imports <File>;
    calli:imports foaf:Document;
    calli:script """
        var con = this.objectConnection;
        var vf = con.valueFactory;
        if (!location)
            throw new BadRequest("Missing location request header");
        if (location instanceof File) {
            location = location.RemoveFile();
        }
        var created = location;

        var filename = created.resource.localName.replace(/([a-zA-Z_0-9])\\.[a-zA-Z]+$/, "$1");
        var label = vf.createLiteral(URLDecoder.decode(filename, "UTF-8").replace(/-/g, " "));
        con.add(created.resource, RDFS.LABEL, label, []);

        created = con.addDesignation(created, this.toString());
        created = con.addDesignation(created, Document);

        created.UploadStyle(new java.io.InputStreamReader(body, "UTF-8"));
        return created;
    """.

# PUT /style.css
:UploadStyle rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Style>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom owl:Nothing];
    calli:method "PUT";
    calli:realm </>;
    calli:imports <java:org.openrdf.model.vocabulary.RDFS>;
    calli:imports <java:java.net.URLDecoder>;
    calli:imports <java:org.callimachusproject.server.HTTPObjectServer>;
    calli:imports <java:org.callimachusproject.server.exceptions.BadRequest>;
    calli:imports <Style>;
    calli:imports <java:org.openrdf.query.QueryLanguage>;
    calli:script """
        if (!reader)
            throw new BadRequest("Missing PUT request payload");
        var read;
        var buf = java.lang.reflect.Array.newInstance(java.lang.Character.TYPE, 1024);
        var out = this.openWriter();
        try {
            while ((read = reader.read(buf)) >= 0) {
                out.write(buf, 0, read);
            }
        } finally {
            out.close();
        }
        this.touchRevision();
    """.

:reader a owl:FunctionalProperty, owl:ObjectProperty;
    rdfs:domain :UploadStyle;
    rdfs:range <java:java.io.Reader>;
    calli:type "text/css".

