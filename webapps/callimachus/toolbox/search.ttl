@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix skosxl:<http://www.w3.org/2008/05/skos-xl#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix keyword:<http://www.openrdf.org/rdf/2011/keyword#>.
@prefix :<#>.

<> a <../SchemaGraph>.

# anybody with credentials can look something up
:AuthorizeSearchFolder owl:intersectionOf (calli:IsAuthorized
		[owl:onProperty msg:target; owl:allValuesFrom <../Folder>]);
	msg:sparql  """
		ASK {
			?accounts calli:authNamespace [calli:hasComponent $credential]
			FILTER ($method = "GET" || $method = "HEAD")
			FILTER (substr($query,1,2) = "q=")
		}
	""".

:SearchFolder rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <../Folder>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
	calli:method "GET";
	calli:query "q";
	calli:realm </manifest>;
	calli:type "application/sparql-results+xml";
	calli:header "cache-control:no-store";
	calli:transform :TransformSearchFolder;
	msg:sparql  """
		SELECT DISTINCT (max(?label) as ?label) (max(?comment) as ?comment) (max(?icon) as ?icon) ?url (max(?modified) as ?modified)
		WHERE {
			{
				?url keyword:phone ?soundex
				FILTER sameTerm(?soundex, keyword:soundex($q))
				FILTER (isIRI(?url))
				FILTER strstarts(str(?url), str($this))
			} OPTIONAL {
				?url skos:prefLabel ?label
			} OPTIONAL {
				?url foaf:name ?label
			} OPTIONAL {
				?url rdfs:label ?label
			} OPTIONAL {
				?url skosxl:literalForm ?label
			}
			FILTER EXISTS {
				?url ?p ?string
				FILTER regex(?string, keyword:regex($q))
			}
			OPTIONAL { ?url a [calli:icon ?icon] }
			OPTIONAL { ?url rdfs:comment ?comment }
			OPTIONAL { ?url audit:revision ?revision
				OPTIONAL { ?revision audit:committedOn ?modified }
			}
		}
		GROUP BY ?url
		ORDER BY ?label ?url ?icon
		LIMIT 100
	""".

:q a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :SearchFolder;
	rdfs:range xsd:string;
	calli:query "q".

:TransformSearchFolder rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <../Folder>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
	calli:type "application/xml";
	calli:transform <../transforms/TransformLayout>;
	msg:xslt <search.xsl>.

:inputStream a owl:ObjectProperty; a owl:FunctionalProperty;
	rdfs:domain :TransformSearchFolder;
	rdfs:range <java:java.io.InputStream>.

