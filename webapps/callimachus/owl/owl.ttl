# 
#    Copyright (c) 2011 Talis Inc., Some rights reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<Ontology> a calli:Creatable, </callimachus/ListClass>, owl:Class;
	rdfs:subClassOf calli:Creator, calli:Viewable, calli:Editable, owl:Ontology;
	rdfs:label "Ontology";
	rdfs:comment "Ontologies are the structural frameworks for organizing resources into classes based on characteristics which they have in common";
	calli:creates <Class>;
	calli:creates <ObjectProperty>;
	calli:createRev rdfs:isDefinedBy;
	calli:icon <ontology.png>;
	calli:view <ontology.xhtml>;
	calli:edit <ontology-edit.xhtml>;
	calli:create <ontology-create.xhtml>;
	calli:uriSpace </rdf/>;
	calli:reader </group/users>;
	calli:editor </group/staff>;
	calli:administrator </group/admin>.

<ObjectProperty> a calli:Creatable, owl:Class;
	rdfs:subClassOf calli:Viewable, calli:Editable, owl:Class;
	rdfs:label "Object Property";
	rdfs:comment "A type of relationship between objects";
	calli:view <property.xhtml>;
	calli:edit <property-edit.xhtml>;
	calli:create <property-create.xhtml>;
	calli:uriSpace </rdf/>;
	calli:administrator </group/admin>.

# Note instances of <Class> are creatable and <Class> itself is also creatable
<Class> a calli:Creatable, owl:Class;
	rdfs:subClassOf calli:Creatable, calli:Viewable, calli:Editable, owl:Class;
	rdfs:label "Class";
	rdfs:comment "A class is a construct that is used as a blueprint (or template) to create and edit resources of that class";
	calli:icon <class.png>;
	calli:view <class.xhtml>;
	calli:edit <class-edit.xhtml>;
	calli:create <class-create.xhtml>;
	calli:uriSpace </rdf/>;
	calli:administrator </group/admin>.

# when an ontology is created
:PostOntologyCreate owl:intersectionOf (</callimachus/operations/create.ttl#PostCreate>
		[owl:onProperty msg:target; owl:hasValue <Ontology>]);
	msg:imports <java:org.openrdf.sail.auditing.vocabulary.Audit>;
	msg:imports <java:org.openrdf.model.vocabulary.RDF>;
	msg:imports </rdf/>;
	msg:imports <Class>;
	msg:script """
		var ontology = proceed();
		var local = ontology.resource.localName.replace(/[+]/g, '');
		var uri = ontology.resource.stringValue();
		if (!ontology.objectConnection.getNamespace(local)) {
			ontology.objectConnection.setNamespace(local, uri + '/');
		}
		return ontology;
	""".

:GetClassIndexPage rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Class>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:javax.xml.stream.XMLEventReader>];
	msg:method "GET";
	msg:query "index";
	msg:type "application/xhtml+xml";
	msg:transform </callimachus/layout.ttl#TransformXhtml>;
	msg:header "cache-control:no-cache";
	msg:imports <class-index.xhtml>;
	msg:script "return class_index_xhtml.calliConstruct(this, 'index')".

# when an ontology creates a class
:PostClassCreate owl:intersectionOf (</callimachus/operations/create.ttl#PostCreate>
		[owl:onProperty msg:target; owl:allValuesFrom <Ontology>]);
	msg:imports <java:org.openrdf.sail.auditing.vocabulary.Audit>;
	msg:imports <java:org.openrdf.model.vocabulary.RDF>;
	msg:imports </rdf/>;
	msg:imports <Class>;
	msg:script """
		var klass = proceed();
		if (klass instanceof Class) {
			klass.calliUriSpace.add(rdf);
			var con = this.objectConnection;
			var vf = con.getValueFactory();
			con.add(Audit.CURRENT_TRX, RDF.TYPE, vf.createURI("http://callimachusproject.org/rdf/2009/framework#SchemaGraph"), []);
			con.recompileAfterClose();
		}
		return klass;
	""".

:PostClassEdit owl:intersectionOf (</callimachus/operations/edit.ttl#PostEdit>
		[owl:onProperty msg:target; owl:allValuesFrom <Class>]);
	msg:imports <java:org.openrdf.sail.auditing.vocabulary.Audit>;
	msg:imports <java:org.openrdf.model.vocabulary.RDF>;
	msg:script """
		var ret = proceed();
		var con = this.objectConnection;
		var vf = con.getValueFactory();
		con.add(Audit.CURRENT_TRX, RDF.TYPE, vf.createURI("http://callimachusproject.org/rdf/2009/framework#SchemaGraph"), []);
		con.recompileAfterClose();
		return ret;
	""".

<sample-view.xhtml> a </callimachus/Page>.
<sample-edit.xhtml> a </callimachus/Page>.
<sample-create.xhtml> a </callimachus/Page>.

