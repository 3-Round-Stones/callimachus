@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix dcterms:<http://purl.org/dc/terms/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix :<#>.

<Manifest> rdfs:subClassOf calli:Menu, calli:Viewable, calli:Editable;
	calli:view <manifest.xhtml>;
	calli:edit <manifest-edit.xhtml>.

calli:logo a owl:ObjectProperty;
	msg:method "GET"; msg:query "logo"; msg:expect "302-see-other".

calli:favicon a owl:ObjectProperty;
	msg:method "GET"; msg:query "favicon"; msg:expect "302-see-other".

calli:template a owl:ObjectProperty;
	msg:method "GET"; msg:query "template"; msg:expect "302-see-other".

:GetLayout rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "layout";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliTheme.calliLayout;
	""".

:GetStyle rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "style";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliTheme.calliStyle;
	""".

:GetAside rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "aside";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliTheme.calliAside;
	""".

:GetInternetExplorer rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "internetExplorer";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliTheme.calliInternetExplorer;
	""".

:GetColour rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "colour";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliColourScheme.calliColour;
	""".

:GetJqueryui rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "jqueryui";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliColourScheme.calliJqueryui;
	""".

:GetSource rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	msg:method "GET";
	msg:query "source";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliColourScheme.toString() + "?source";
	""".

:GetRights rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
	msg:method "GET";
	msg:query "rights";
	msg:type "application/sparql-results+xml";
	msg:transform :TransformRights;
	msg:sparql  """
		SELECT DISTINCT ?rights ?license ?title ?creator
		WHERE {
			{
				$this calli:rights ?rights
			} UNION {
				$this calli:license ?license
				OPTIONAL {
					?license dcterms:title ?title
				}
				OPTIONAL {
					?license dcterms:creator [dcterms:title ?creator]
				}
			}
		}
	""".

:TransformRights rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
	msg:type "application/xhtml+xml";
	msg:xslt <styles/manifest.xsl>.

:xml a owl:ObjectProperty; a owl:FunctionalProperty;
	rdfs:domain :TransformRights;
	rdfs:range <java:java.io.InputStream>;
	msg:type "application/sparql-results+xml".

:PostEditManifest owl:intersectionOf (</callimachus/toolbox/edit.ttl#PostEdit>
		[owl:onProperty msg:target; owl:allValuesFrom <Manifest>]);
	msg:imports <java:org.openrdf.http.object.HTTPObjectServer>;
	msg:script "HTTPObjectServer.resetAllCache(); return proceed();".

