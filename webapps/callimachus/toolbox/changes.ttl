@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix skosxl:<http://www.w3.org/2008/05/skos-xl#>.
@prefix foaf:<http://xmlns.com/foaf/0.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix prov:<http://www.w3.org/ns/prov#>.
@prefix keyword:<http://www.openrdf.org/rdf/2011/keyword#>.
@prefix audit:<http://www.openrdf.org/rdf/2012/auditing#>.
@prefix :<#>.

<> a <../SchemaGraph>.

################################
# Recent Changes
################################

:GetFolderChanges rdfs:subClassOf msg:Message;
    rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <../Folder>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
    calli:method "GET";
    calli:query "changes";
    calli:rel "alternate";
    calli:type "application/sparql-results+xml;q=0.1";
    calli:transform <../transforms/TransformIntoAtom>;
    calli:transform :TransformRecentChanges;
    msg:sparql """
        PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
        PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
        PREFIX skos:<http://www.w3.org/2004/02/skos/core#>
        PREFIX skosxl:<http://www.w3.org/2008/05/skos-xl#>
        PREFIX dc:<http://purl.org/dc/elements/1.1/>
        PREFIX dcterms:<http://purl.org/dc/terms/>
        PREFIX foaf:<http://xmlns.com/foaf/0.1/>
        PREFIX prov:<http://www.w3.org/ns/prov#>
        PREFIX calli:<http://callimachusproject.org/rdf/2009/framework#>
        PREFIX audit:<http://www.openrdf.org/rdf/2012/auditing#>
        SELECT * {
            {
                $this prov:wasGeneratedBy [prov:endedAtTime ?updated]
                BIND (concat(str($this),"?changes") as ?id)
                BIND ("feed" as ?type)
            } UNION {
                $this rdfs:label ?title
                BIND (concat(str($this),"?changes") as ?id)
                BIND ("feed" as ?type)
            } UNION {
                {
                    SELECT ?id (max(?title)  as ?title) (max(?updated) as ?updated) (max(?summary) as ?summary) (max(?icon) as ?icon)
                            (?id as ?content_src) (max(?content_type) as ?content_type) ("entry" as ?type)
                            (?id as ?link_edit_media_href) (concat(str(?id),"?view") as ?link_view_href) (concat(str(?id),"?history") as ?link_history_href)
                            (concat(str(?revision),"?view") as ?link_href) (prov:wasGeneratedBy as ?link_rel) ("text/html" as ?link_type)
                            (max(?contributor_uri) as ?contributor_uri) (max(?contributor_name) as ?contributor_name)  {
                        ?revision a audit:RecentActivity; prov:endedAtTime ?updated .
                        ?id prov:wasGeneratedBy ?revision .
                        FILTER strstarts(str(?id), str($this))
                        OPTIONAL {
                            ?revision prov:wasAssociatedWith ?contributor_uri
                            OPTIONAL {
                                ?contributor_uri rdfs:label ?contributor_name
                            }
                        } OPTIONAL {
                            ?id skos:prefLabel ?title
                        } OPTIONAL {
                            ?id foaf:name ?title
                        } OPTIONAL {
                            ?id rdfs:label ?title
                        } OPTIONAL {
                            ?id skosxl:literalForm ?title
                        } OPTIONAL {
                            ?id dcterms:title ?title
                        } OPTIONAL {
                            GRAPH ?revision { ?id skos:changeNote ?summary }
                        } OPTIONAL {
                            ?id a [calli:icon ?icon]
                        } OPTIONAL {
                            ?id a [calli:type ?content_type]
                        }
                    } GROUP BY ?id ?revision ORDER BY desc(?updated) LIMIT 100
                }
                FILTER bound(?id)
            }
        } ORDER BY desc(?type) desc(?updated) ?id
    """.

:TransformRecentChanges rdfs:subClassOf msg:Message;
   rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <../Folder>];
    rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:java.io.InputStream>];
    calli:type "application/xhtml+xml";
    calli:transform <../transforms/TransformLayout>;
    calli:xslt <changes.xsl>.

:inputStream a owl:ObjectProperty; a owl:FunctionalProperty;
    rdfs:domain :TransformRecentChanges;
    rdfs:range <java:java.io.InputStream>;
    calli:type "application/sparql-results+xml".

