@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix skos:<http://www.w3.org/2004/02/skos/core#>.
@prefix dc:<http://purl.org/dc/elements/1.1/>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix :<#>.

<> a </callimachus/SchemaGraph>.

<Manifest> rdfs:subClassOf <Viewable>, <Editable>, calli:Manifest;
	rdfs:isDefinedBy </callimachus>;
	calli:view <manifest-view.xhtml>;
	calli:edit <manifest-edit.xhtml>.

calli:logo a owl:ObjectProperty;
	msg:method "GET"; msg:query "logo"; msg:expect "302-see-other".

calli:favicon a owl:ObjectProperty;
	msg:method "GET"; msg:query "favicon"; msg:expect "302-see-other".

calli:template a owl:ObjectProperty;
	msg:method "GET"; msg:query "template"; msg:expect "302-see-other".

:GetLayout rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "layout";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		try {
			var theme = this.calliTheme;
			if (theme)
				return theme.calliLayout;
		} catch (e) {
			e.javaException.printStackTrace();
		}
		return this.objectConnection.getObject(this.toUri().resolve("/callimachus/themes/default/layout.xhtml"));
	""".

:GetStyleSheets rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	msg:method "GET";
	msg:query "styles";
	msg:type "text/xml";
	msg:script """
		var xhtml = ['<html xmlns="http://www.w3.org/1999/xhtml"><head><title></title>'];
		try {
			if (this.calliTheme) {
				xhtml.push('<base href="');
				xhtml.push(this.calliTheme.calliLayout);
				xhtml.push('" />');
				xhtml.push('<link rel="stylesheet" href="');
				xhtml.push(this.calliTheme.calliStyle);
				xhtml.push('" />');
				xhtml.push('<link rel="stylesheet jqueryui" href="');
				xhtml.push(this.calliTheme.calliJqueryui);
				xhtml.push('" />');
				xhtml.push('<link rel="stylesheet" href="');
				xhtml.push(this.calliTheme.calliColour);
				xhtml.push('" />');
			}
		} catch (e) {
			e.javaException.printStackTrace();
		}
		xhtml.push('</head><body></body></html>');
		return xhtml.join('');
	""".

:GetSource rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	msg:method "GET";
	msg:query "source";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliTheme.toString() + "?source";
	""".

:GetJqueryuiStyle rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom rdfs:Resource];
	msg:method "GET";
	msg:query "jqueryui";
	msg:expect "302-see-other";
	msg:type "text/uri-list";
	msg:script """
		return this.calliTheme.calliJqueryui;
	""".

:GetRights rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Manifest>];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom <java:org.w3c.dom.Element>];
	msg:method "GET";
	msg:query "rights";
	msg:type "application/xml";
	msg:script  """
		var rights = "";
		try {
			if (this.calliRights) {
				var nodes = this.calliRights.childNodes;
				for (var i=0; i<nodes.length; i++) {
					if (nodes.item(i).nodeType == 1)
						return nodes.item(i);
				}
			}
		} catch (e) {
			e.javaException.printStackTrace();
		}
		return null;
	""".

:PostEditManifest owl:intersectionOf (</callimachus/toolbox/edit.ttl#PostEdit>
		[owl:onProperty msg:target; owl:allValuesFrom <Manifest>]);
	msg:imports <java:org.openrdf.http.object.HTTPObjectServer>;
	msg:script "HTTPObjectServer.resetAllCache(); return proceed();".

