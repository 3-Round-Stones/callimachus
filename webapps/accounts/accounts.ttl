@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix obj:<http://www.openrdf.org/rdf/2009/object#>.
@prefix http:<http://www.openrdf.org/rdf/2009/httpobject#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

################################
# Realm
################################

<Accounts> rdfs:subClassOf calli:DigestRealm, calli:Viewable;
	calli:view <view.xhtml>.

</accounts> a <Accounts>;
	calli:origin <../>;
	calli:authName <../>;
	calli:domain <../>;
	calli:unauthorized <unauthorized.xhtml>;
	calli:forbidden <forbidden.xhtml>.

################################
# login
################################

:GetAuthorization rdfs:subClassOf obj:Message;
	rdfs:subClassOf [owl:onProperty obj:target; owl:hasValue </accounts>].

:authorization a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :GetAuthorization;
	rdfs:range xsd:string;
	http:header "Authorization".

# Redirection to the authorized user
# Used to welcome new users
:GetLoginPage rdfs:subClassOf :GetAuthorization;
	rdfs:subClassOf [owl:onProperty obj:functionalLiteralResponse;
		owl:allValuesFrom xsd:string];
	http:method "GET";
	http:operation "login", "settings", "contributions";
	http:realm </accounts>;
	http:expect "302-found";
	http:cache-control "max-age:3600";
	obj:script """
		if ("settings" == query)
			return findCredential(authorization) + "?edit";
		if ("contributions" == query)
			return findCredential(authorization) + "?contributions";
		return findCredential(authorization).toString();
	""".

:query a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :GetLoginPage;
	rdfs:range xsd:string;
	http:parameter "*".

################################
# logout
################################

# Prompts the browser to login using different credentials
# Available to user when logged in
:GetLogout rdfs:subClassOf :GetAuthorization;
	rdfs:subClassOf [owl:onProperty obj:functionalObjectResponse;
		owl:allValuesFrom <java:org.apache.http.HttpResponse>];
	http:method "GET";
	http:operation "logout";
	http:type "message/x-response";
	obj:imports <java:org.apache.http.ProtocolVersion>;
	obj:imports <java:org.apache.http.message.BasicHttpResponse>;
	obj:script """
		var ver = new ProtocolVersion("HTTP", 1, 1);
		if (authorization) { //# browser sent credentials
			var credential = findCredential(authorization);
			if (!credential) { //# invalid credentials received
				var resp = new BasicHttpResponse(ver, 303, "See Other");
				resp.setHeader("Location", "/");
				return resp;
			}
		}
		//# the browser must send invalid credentials to logout
		var resp = new BasicHttpResponse(ver, 401, "Unauthorized");
		var hd = 'Digest realm="' + calliAuthName + '", domain="' + protectionDomain()
			+ '", nonce="invalid", algorithm="MD5", qop="auth,auth-int"';
		resp.setHeader('WWW-Authenticate', hd);
		return resp;
	""".

