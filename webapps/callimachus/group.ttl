@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix audit:<http://www.openrdf.org/rdf/2009/auditing#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

<Group> a calli:Creatable, <IndexClass>, owl:Class;
	rdfs:subClassOf calli:Viewable, calli:Editable, calli:Group;
	rdfs:label "Group";
	rdfs:comment "Groups provide a way to assign permissions to a named set of users";
	calli:icon <group.png>;
	calli:view <group.xhtml>;
	calli:edit <group-edit.xhtml>;
	calli:create <group-create.xhtml>;
	calli:uriSpace </>.

################################
# User setup
################################

:local a calli:LocalRealm;
	calli:domain </>.

:HasNoAdministrator rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Group>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:boolean];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:cardinality 1];
	msg:sparql  """
		ASK {
			# this group is maintained by its members, but
			{
				$this calli:administrator $this
			} UNION {
				$this a [calli:administrator $this]
			}

			# there are no members to maintain this
			OPTIONAL { $this calli:member ?member } FILTER (!bound(?member))

			# there is no other user assigned to maintain this
			OPTIONAL { $this calli:administrator [calli:name ?user] } FILTER (!bound(?user))

			# there is no member of another group that can maintain this
			OPTIONAL { $this calli:administrator [calli:member ?adimn] } FILTER (!bound(?admin))
		}
	""".

:GetUserSetup rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Group>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	msg:method "GET";
	msg:query "usersetup";
	msg:type "text/html";
	msg:realm :local;
	msg:imports <pages/user-setup.xhtml>;
	msg:imports <java:org.openrdf.http.object.exceptions.BadRequest>;
	msg:script """
		if (!this.HasNoAdministrator())
			throw new BadRequest("This service has already been setup");
		return user_setup_xhtml.calliConstructHTML(this, "create");
	""".

rdfs:label a rdf:Property.

:PostUserSetup rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom <Group>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	msg:method "POST";
	msg:query "usersetup";
	msg:realm :local;
	msg:expect "201-created";
	msg:imports </user/>;
	msg:imports <User>;
	msg:imports <java:org.openrdf.http.object.exceptions.BadRequest>;
	msg:imports <java:org.openrdf.http.object.exceptions.Conflict>;
	msg:imports <java:org.apache.commons.codec.binary.Hex>;
	msg:imports <java:java.net.URLEncoder>;
	msg:script """
		if (!this.HasNoAdministrator())
			throw new BadRequest("This service has already been setup");
		if (!form.get("label"))
			throw new BadRequest("Missing label");
		if (!form.get("name"))
			throw new BadRequest("Missing name");
		if (!form.get("algorithm"))
			throw new BadRequest("Missing algorithm");
		if (!form.get("encoded"))
			throw new BadRequest("Missing encoded");
		var label = form.get("label")[0];
		var username = form.get("name")[0];
		var algorithm = form.get("algorithm")[0];
		var encoded = form.get("encoded")[0];
		if (algorithm != "MD5")
			throw new BadRequest("Unsupported algorithm");
		if (!encoded || encoded.length < 32)
			throw new BadRequest("Invalid MD5 sum");
		var decoded = Hex.decodeHex(new java.lang.String(encoded).toCharArray());
		var uri = user + URLEncoder.encode(username).replace(/%20/g, "+").toLowerCase();
		var newUser = this.objectConnection.getObject(uri);
		if (newUser instanceof User)
			throw new Conflict("User already exists: " + newUser);
		newUser = this.objectConnection.addDesignation(newUser, User);
		newUser = this.objectConnection.addDesignation(newUser, "http://callimachusproject.org/rdf/2009/framework#Party");
		newUser = this.objectConnection.addDesignation(newUser, "http://callimachusproject.org/rdf/2009/framework#User");
		newUser.calliName = username;
		newUser.calliAlgorithm = algorithm;
		newUser.calliEncoded = decoded;
		newUser.rdfsLabels.add(label);
		newUser.calliReaders.addAll(this.calliReaders);
		newUser.calliEditors.addAll(this.calliEditors);
		user.calliHasComponent.add(newUser);
		this.calliMembers.add(newUser);
		return uri;
	""".

:form a owl:ObjectProperty, owl:FunctionalProperty;
	rdfs:domain :PostUserSetup;
	rdfs:range <java:java.util.Map>;
	msg:type "application/x-www-form-urlencoded".

