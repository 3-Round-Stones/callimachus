# 
#    Copyright (c) 2010 James Leigh, Some rights reserved
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

@prefix xsd:<http://www.w3.org/2001/XMLSchema#>.
@prefix rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:<http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:<http://www.w3.org/2002/07/owl#>.
@prefix msg:<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix calli:<http://callimachusproject.org/rdf/2009/framework#>.
@prefix :<#>.

</graph> calli:maintainer </group/admin>.

:PostRdfGraph rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:hasValue </graph>];
	rdfs:subClassOf [owl:onProperty msg:literal; owl:allValuesFrom xsd:string];
	msg:method "POST";
	msg:type "text/html";
	msg:realm </accounts>;
	msg:imports calli:NamedGraph;
	msg:imports <java:java.net.URLEncoder>;
	msg:imports <java:org.openrdf.rio.RDFFormat>;
	msg:imports <java:javax.mail.util.ByteArrayDataSource>;
	msg:imports <java:javax.mail.internet.MimeMultipart>;
	msg:imports </sparql/uploaded.xhtml>;
	msg:script """
		var ds = new ByteArrayDataSource(input, "multipart/form-data");
		var part = new MimeMultipart(ds).getBodyPart(0);
		var fileName = part.fileName;
		var local = ("" + URLEncoder.encode(fileName, "UTF-8")).replace(/%20/g, "+");
		var uri = toUri().resolve("/graph/") + local;
		var format = RDFFormat.forFileName(fileName, RDFFormat.RDFXML);
		var vf = this.objectConnection.getValueFactory();
		var file = part.getInputStream();
		var obj = this.objectConnection.getObject(uri);
		this.objectConnection.clear([vf.createURI(uri)]);
		if (!(obj instanceof NamedGraph)) {
			this.objectConnection.addDesignation(obj, NamedGraph);
		}
		this.objectConnection.add(file, uri, format, [vf.createURI(uri)]);
		this.objectConnection.commit();
		java.lang.System.gc();
		return uploaded_xhtml.calliConstructHTML(obj);
	""".

:input a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :PostRdfGraph;
	rdfs:range <java:java.io.InputStream>;
	msg:type "multipart/form-data".

